definitions:
  model.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  model.Tokens:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  pkg.MessageResponse:
    properties:
      message:
        type: string
    type: object
  pkg.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    type: object
  pkg.UserIDResponse:
    properties:
      guid:
        type: string
    type: object
info:
  contact: {}
paths:
  /logout:
    post:
      description: Отзывает все refresh токены пользователя и запрещает дальнейший
        доступ к защищенным эндпоинтам
      produces:
      - application/json
      responses:
        "200":
          description: Сообщение об успешном выходе
          schema:
            $ref: '#/definitions/pkg.MessageResponse'
        "401":
          description: user not authorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: failed to revoke tokens или failed to revoke user access
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Деавторизация пользователя (logout)
      tags:
      - auth
  /token:
    post:
      consumes:
      - application/json
      description: Генерация токенов по переданному user_id (UUID)
      parameters:
      - description: UUID пользователя
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Пара access и refresh токенов
          schema:
            $ref: '#/definitions/model.Tokens'
        "400":
          description: Неверный запрос
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Получить access и refresh токены
      tags:
      - auth
  /token/refresh:
    post:
      consumes:
      - application/json
      description: Обновляет access и refresh токены по действительному refresh токену
      parameters:
      - description: Refresh Token
        in: body
        name: refresh_token
        required: true
        schema:
          $ref: '#/definitions/pkg.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Новая пара токенов
          schema:
            $ref: '#/definitions/model.Tokens'
        "400":
          description: invalid request body
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: user not authorized или failed to refresh tokens
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Обновление пары токенов (access и refresh)
      tags:
      - auth
  /users/me:
    get:
      description: Возвращает GUID пользователя из контекста авторизации (access token
        должен быть валиден)
      produces:
      - application/json
      responses:
        "200":
          description: GUID текущего пользователя
          schema:
            $ref: '#/definitions/pkg.UserIDResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получить GUID текущего пользователя
      tags:
      - users
swagger: "2.0"
